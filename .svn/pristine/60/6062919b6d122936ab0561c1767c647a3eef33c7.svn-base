package com.yishanxiu.yishang.fragment;

import android.content.Intent;
import android.graphics.Paint;
import android.graphics.Rect;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentManager;
import android.support.v4.content.ContextCompat;
import android.support.v4.view.PagerAdapter;
import android.support.v4.view.ViewPager;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;

import com.lidroid.xutils.ViewUtils;
import com.lidroid.xutils.view.annotation.ViewInject;
import com.lidroid.xutils.view.annotation.event.OnClick;
import com.shizhefei.view.indicator.IndicatorViewPager;
import com.shizhefei.view.indicator.ScrollIndicatorView;
import com.shizhefei.view.indicator.slidebar.TextWidthColorBar;
import com.shizhefei.view.indicator.transition.OnTransitionTextListener;
import com.yishanxiu.yishang.R;
import com.yishanxiu.yishang.activity.MainActivity2;
import com.yishanxiu.yishang.activity.ProductSearchActivity;
import com.yishanxiu.yishang.utils.DisplayUtil;
import com.yishanxiu.yishang.utils.ExtraKeys;

/**
 * @author FangDongzhang
 *         <p/>
 *         2016/8/2 商城
 */
public class ShopMallFragment2 extends LazyFragment {
    private IndicatorViewPager indicatorViewPager;
    @ViewInject(R.id.moretab_viewPager)
    private ViewPager viewPager;
    @ViewInject(R.id.moretab_indicator)
    private ScrollIndicatorView scrollIndicatorView;
    private String[] strings = {"推荐", "分类", "品牌"};

//    @ViewInject(R.id.find_artical_search)
//    private ImageView find_artical_search;

    @Override
    protected void onCreateViewLazy(Bundle savedInstanceState) {
        super.onCreateViewLazy(savedInstanceState);
        setContentView(R.layout.shop_mall_fragment);
        ViewUtils.inject(this, getContentView());
        initView();
    }

    @Override
    protected void onFragmentStartLazy() {
        super.onFragmentStartLazy();
    }

    /**
     * 初始化控件
     */
    private void initView() {
        int indicatorColor = ContextCompat.getColor(activity,R.color.black_deep);
        scrollIndicatorView.setOnTransitionListener(
                new OnTransitionTextListener().setColorId(activity, R.color.black_deep, R.color.darkGray).setSizeId(activity, R.dimen.common_textsize, R.dimen.common_textsize));
        scrollIndicatorView.setScrollBar(new TextWidthColorBar(activity, scrollIndicatorView, indicatorColor, 5));
        indicatorViewPager = new IndicatorViewPager(scrollIndicatorView, viewPager);
        indicatorViewPager.setAdapter(new MyAdapter(getChildFragmentManager()));
    }

    /**
     * 搜索监听
     */
    @OnClick(R.id.find_artical_search)
    public void find_artical_search_click(View view) {
        Intent intent = new Intent(activity, ProductSearchActivity.class);
        intent.putExtra(ExtraKeys.Key_Msg1, "");
        activity.jumpTo(intent);
    }

    private class MyAdapter extends IndicatorViewPager.IndicatorFragmentPagerAdapter {
        private LayoutInflater inflater = null;

        public MyAdapter(FragmentManager fragmentManager) {
            super(fragmentManager);
            inflater = LayoutInflater.from(getApplicationContext());
        }

        @Override
        public int getCount() {
            return strings.length;
        }

        @Override
        public View getViewForTab(int position, View convertView, ViewGroup container) {
            if (convertView == null) {
                convertView = inflater.inflate(R.layout.tab_top, container, false);
            }
            TextView textView = (TextView) convertView;
            textView.setText(strings[position]);

            int witdh = getTextWidth(textView);
            int padding = DisplayUtil.dipToPix(activity.getApplicationContext(), 15);
            // 因为wrap的布局 字体大小变化会导致textView大小变化产生抖动，这里通过设置textView宽度就避免抖动现象
            // 1.3f是根据上面字体大小变化的倍数1.3f设置
            textView.setWidth((int) (witdh * 1f) + padding);
            return convertView;
        }

        @Override
        public int getItemPosition(Object object) {
            // 这是ViewPager适配器的特点,有两个值
            // POSITION_NONE，POSITION_UNCHANGED，默认就是POSITION_UNCHANGED,
            // 表示数据没变化不用更新.notifyDataChange的时候重新调用getViewForPage
            return PagerAdapter.POSITION_UNCHANGED;
        }

        private int getTextWidth(TextView textView) {
            if (textView == null) {
                return 0;
            }
            Rect bounds = new Rect();
            String text = textView.getText().toString();
            Paint paint = textView.getPaint();
            paint.getTextBounds(text, 0, text.length(), bounds);
            return bounds.left + bounds.width();
        }

        @Override
        public Fragment getFragmentForPage(int position) {
            if (position == 0) {
                return new RecommendFragment();
            } else {
                if (position == 1) return new ProductCategoryFragment();
                else {
                    return new BrandAllFragment();
                }
            }
        }

    }

    @Override
    protected void onResumeLazy() {
        super.onResumeLazy();
        int index = ((MainActivity2) activity).secondPageIndex;
        if (index > 0) {
            indicatorViewPager.setCurrentItem(index, true);
            ((MainActivity2) activity).secondPageIndex = -1;

        }
    }

    @Override
    public void onHiddenChanged(boolean hidden) {
        super.onHiddenChanged(hidden);
    }
}
