package com.yishanxiu.yishang.fragment;

import java.util.HashMap;
import java.util.List;

import com.lidroid.xutils.ViewUtils;
import com.lidroid.xutils.view.annotation.ViewInject;
import com.lidroid.xutils.view.annotation.event.OnClick;
import com.shizhefei.view.indicator.IndicatorViewPager;
import com.shizhefei.view.indicator.ScrollIndicatorView;
import com.shizhefei.view.indicator.slidebar.TextWidthColorBar;
import com.shizhefei.view.indicator.transition.OnTransitionTextListener;
import com.yishanxiu.yishang.R;
import com.yishanxiu.yishang.activity.ArticalSearchActivity;
import com.yishanxiu.yishang.getdata.GetDataConfing;
import com.yishanxiu.yishang.getdata.GetDataQueue;
import com.yishanxiu.yishang.getdata.IGetServicesDataCallBack;
import com.yishanxiu.yishang.getdata.JsonKeys;
import com.yishanxiu.yishang.getdata.ShowGetDataError;
import com.yishanxiu.yishang.utils.Constant;
import com.yishanxiu.yishang.utils.DisplayUtil;
import com.yishanxiu.yishang.utils.ExtraKeys;

import android.content.Intent;
import android.graphics.Color;
import android.graphics.Paint;
import android.graphics.Rect;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentManager;
import android.support.v4.view.PagerAdapter;
import android.support.v4.view.ViewPager;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import net.tsz.afinal.json.JsonMap;
import net.tsz.afinal.json.JsonParseHelper;

/**
 * 发现
 * 
 * @author FangDongzhang 2016/7/22
 */
public class FindFragment2 extends LazyFragment {
	private IndicatorViewPager indicatorViewPager;
	@ViewInject(R.id.moretab_indicator)
	private ScrollIndicatorView scrollIndicatorView;
	@ViewInject(R.id.moretab_viewPager)
	private ViewPager viewPager;
	private String[] strings;
	private String[] stringsId;

	@ViewInject(R.id.find_artical_search)
	private ImageView find_artical_search;

	private LayoutInflater inflater = null;

	@Override
	protected void onCreateViewLazy(Bundle savedInstanceState) {
		super.onCreateViewLazy(savedInstanceState);
		setContentView(R.layout.fragment_find2);
		ViewUtils.inject(this, getContentView());
		inflater = LayoutInflater.from(getApplicationContext());
		//activity.loadingToast.show();
		getServerData();
		viewPager.setOffscreenPageLimit(6);
	}

	@Override
	protected void onFragmentStartLazy() {
		super.onFragmentStartLazy();

	}

	/**
	 * 初始化控件
	 */
	private void initView() {
		int indicatorColor = getResources().getColor(R.color.black_deep);
		scrollIndicatorView.setOnTransitionListener(
				new OnTransitionTextListener().setColorId(activity, R.color.black_deep, R.color.darkGray));
		scrollIndicatorView.setScrollBar(new TextWidthColorBar(activity, scrollIndicatorView, indicatorColor, 5));
		indicatorViewPager = new IndicatorViewPager(scrollIndicatorView, viewPager);
		indicatorViewPager.setAdapter(new MyAdapter(getChildFragmentManager()));
	}

	/**
	 * 搜索监听
	 */
	@OnClick(R.id.find_artical_search)
	public void find_artical_search_click(View v) {
		Intent intent = new Intent(activity, ArticalSearchActivity.class);
		intent.putExtra(ExtraKeys.Key_Msg1, "");
		activity.jumpTo(intent);
	}

	/**
	 * 获取服务器端数据
	 */
	public void getServerData() {
		HashMap<String, Object> params = new HashMap<String, Object>();

		GetDataQueue queue = new GetDataQueue();
		queue.setActionName(GetDataConfing.GetAction_GetMoreRelationPersion);
		queue.setParamsNoJson(params);
		queue.setCallBack(callBack);
		queue.setWhat(GetDataConfing.What_GetMoreRelationPersion);
		getDataUtil.getData(queue);
	}

	private IGetServicesDataCallBack callBack = new IGetServicesDataCallBack() {
		@Override
		public void onLoaded(GetDataQueue entity) {
			if (entity.isOk()) {
				// if (ShowGetDataError.isCodeSuccess(activity,
				// entity.getInfo())) {
				if (entity.what == GetDataConfing.What_GetMoreRelationPersion) {

					List<JsonMap<String, Object>> data = JsonParseHelper.getJsonMap_List_JsonMap(entity.getInfo(),
							JsonKeys.Key_Info);
					strings = new String[data.size() + 1];
					stringsId = new String[data.size() + 1];
					strings[0] = "全部";
					stringsId[0] = "0";
					for (int i = 0; i < data.size(); i++) {
						strings[i + 1] = data.get(i).getStringNoNull("groupName");
						stringsId[i + 1] = data.get(i).getStringNoNull("articleGroupId");
					}
				}

				initView();
				// }
			} else {
				ShowGetDataError.showNetError(activity);
			}
			//activity.loadingToast.dismiss();
		}

	};

	private class MyAdapter extends IndicatorViewPager.IndicatorFragmentPagerAdapter {

		public MyAdapter(FragmentManager fragmentManager) {
			super(fragmentManager);

		}

		@Override
		public int getCount() {
			return strings.length;
		}

		@Override
		public View getViewForTab(int position, View convertView, ViewGroup container) {
			if (convertView == null) {
				convertView = inflater.inflate(R.layout.tab_top, container, false);
			}
			TextView textView = (TextView) convertView;
			textView.setText(strings[position]);
			return convertView;
		}

		@Override
		public int getItemPosition(Object object) {
			// 这是ViewPager适配器的特点,有两个值
			// POSITION_NONE，POSITION_UNCHANGED，默认就是POSITION_UNCHANGED,
			// 表示数据没变化不用更新.notifyDataChange的时候重新调用getViewForPage
			return PagerAdapter.POSITION_UNCHANGED;
		}

		@Override
		public Fragment getFragmentForPage(int position) {
			ArticalFragment mainFragment = new ArticalFragment();
			Bundle bundle = new Bundle();
			bundle.putString(Constant.ARTICAL_GROUPID, stringsId[position]);
			mainFragment.setArguments(bundle);
			return mainFragment;
		}

	}

}